{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\OneDrive\\\\Escritorio\\\\Full Stack Open\\\\part1\\\\unicafe\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = ({\n  handleClick,\n  text\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Button;\n\nconst Display = ({\n  count,\n  text\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [text, \" \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Display;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [average, setAverage] = useState(0);\n\n  const rateGood = () => {\n    setGood(good + 1);\n    setTotal(total + 1);\n    setAverage(total / 3);\n  };\n\n  const rateNeutral = () => {\n    setNeutral(neutral + 1);\n    setTotal(total + 1);\n    setAverage(total / 3);\n  };\n\n  const rateBad = () => {\n    setBad(bad + 1);\n    setTotal(total + 1);\n    setAverage(total / 3);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Give Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: rateGood,\n      text: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: rateNeutral,\n      text: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: rateBad,\n      text: \"Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Statistics \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      count: good,\n      text: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      count: neutral,\n      text: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      count: bad,\n      text: \"Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      count: total,\n      text: \"Total stats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      count: average,\n      text: \"Average\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"t3IMhGL+FfYSnhs3hcSdA7M//9s=\");\n\n_c3 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 58,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Display\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["C:/Users/asus/OneDrive/Escritorio/Full Stack Open/part1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Button","handleClick","text","Display","count","App","good","setGood","neutral","setNeutral","bad","setBad","total","setTotal","average","setAverage","rateGood","rateNeutral","rateBad","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Button = ({ handleClick, text }) => {\n  return <button onClick={handleClick}>{text}</button>;\n};\n\nconst Display = ({ count, text }) => {\n  return (\n    <div>\n      <p>\n        {text} {count}\n      </p>\n    </div>\n  );\n};\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [average, setAverage] = useState(0);\n\n  const rateGood = () => {\n    setGood(good + 1);\n    setTotal(total + 1);\n    setAverage(total / 3);\n  };\n  const rateNeutral = () => {\n    setNeutral(neutral + 1);\n    setTotal(total + 1);\n    setAverage(total / 3);\n  };\n  const rateBad = () => {\n    setBad(bad + 1);\n    setTotal(total + 1);\n    setAverage(total / 3);\n  };\n\n  return (\n    <div>\n      <h1>Give Feedback</h1>\n      <Button handleClick={rateGood} text=\"Good\" />\n      <Button handleClick={rateNeutral} text=\"Neutral\" />\n      <Button handleClick={rateBad} text=\"Bad\" />\n\n      <h1>Statistics </h1>\n      <Display count={good} text=\"Good\" />\n      <Display count={neutral} text=\"Neutral\" />\n      <Display count={bad} text=\"Bad\" />\n      <Display count={total} text=\"Total stats\" />\n      <Display count={average} text=\"Average\" />\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}